const oracledb = require('oracledb')
const express = require('express')
const app = express()
var path = require('path')
var request = require('request')
var bodyParser = require('body-parser')
var dbConfig = require('./dbconfig.js')
var jwt = require('jsonwebtoken')
var auth = require('./lib/auth')
// var userlib = require('./lib/userlib')

oracledb.autoCommit = true;

// 디자인 파일 경로 지정
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');

// 디자인 자원 및 json 데이터 사용
// to use static asset
app.use(express.static(path.join(__dirname, 'public')));

// json 허용
app.use(express.json())
app.use(express.urlencoded({extended:false}))
app.use(bodyParser.urlencoded({extended: true}))

//-----------------데이터 전송 라우터 추가----------------------
app.post('/',auth, function(req,res){
    res.send("Hello Tigers!")
})

app.get('/getTime',function(req,res){
    var nowTime = new Date()
    res.json(nowTime)
})

//-------------------오라클예제---------------------------------
oracledb.getConnection(
    {
        user          : dbConfig.user,
        password      : dbConfig.password,
        connectString : dbConfig.connectString
    },
    function(err, connection)
    {
        if (err) {
            console.error(err.message);
            return;
        }
        connection.execute(
            "SELECT * FROM DEF_JOB WHERE ROWNUM <= 3",{},
            {outFormat:oracledb.OBJECT},
            function(err, result)
            {
                if (err) {
                    console.error(err.message);
                    doRelease(connection);
                    return;
                }
                console.log(result.metaData); // 테이블 스키마
                console.log(result.rows); // 데이터
                console.log(result.rows.length);
                doRelease(connection);
            });
    });

function doRelease(connection)
{
    connection.release(
        function(err) {
            if (err) {
                console.error(err.message);
            }
        });
}

//-----------------부서명으로 배치내역 조회하기------------------------------
app.post('/getHistoryBy_deptNM', auth,  function(req,res){
    oracledb.getConnection(
        {
            user          : dbConfig.user,
            password      : dbConfig.password,
            connectString : dbConfig.connectString
        },
        function(err, connection)
        {
            if (err) {
                console.error(err.message);
                return;
            }
            var deptNM = req.body.DEPT_NM;
            //console.log("==> oracle select example is running...")
            var sql="WITH J_T AS ( SELECT JOB_NAME, ORDER_ID, ORDER_TIME, ODATE, DESCRIPTION FROM EZ_HISTORY WHERE JOB_NAME in ( SELECT JOB_NAME FROM EZ_JOB_MAPPER WHERE USER_CD_1 in ( SELECT USER_CD FROM EZ_USER WHERE DEPT_CD = ( SELECT DEPT_CD FROM EZ_DEPT WHERE DEPT_NM IN (:v1))))), MAPPER_T AS(SELECT JOB_NAME, USER_NM FROM EZ_JOB_MAPPER JOIN EZ_USER ON EZ_JOB_MAPPER.USER_CD_1 = EZ_USER.USER_CD), ERROR_CHK_T AS(SELECT EZ_HISTORY.ORDER_ID, ALARM.MESSAGE FROM EZ_HISTORY, ALARM WHERE EZ_HISTORY.ORDER_ID = ALARM.ORDER_ID(+)) SELECT J_T.JOB_NAME, J_T.ORDER_ID, J_T.ODATE, J_T.ORDER_TIME, J_T.DESCRIPTION, MAPPER_T.USER_NM, /*DECODE(ERROR_CHK_T.MESSAGE, NULL, 'SUCCESS', 'FAIL') as SUCCESS,*/ ERROR_CHK_T.MESSAGE FROM J_T , MAPPER_T, ERROR_CHK_T WHERE J_T.JOB_NAME = MAPPER_T.JOB_NAME AND J_T.ORDER_ID = ERROR_CHK_T.ORDER_ID";
            //var sql = "SELECT USER_HP FROM EZ_USER WHERE USER_NM IN (:v1, :v2)";
            //var binds = ["이정가", "신혜가"]
            var binds = [deptNM];

            connection.execute(sql,binds,{outFormat:oracledb.OBJECT},
                    function(err, result){
                    if (err) {
                        console.error(err.message);
                        doRelease(connection);
                        return;
                    }
                    //console.log(result.metaData); // 테이블 스키마
                    console.log(result.rows); // 데이터
                    doRelease(connection, result.rows);
                });
        });
    function doRelease(connection, data)
    {
        connection.release(
            function(err) {
                if (err) {
                    console.error(err.message);
                }
                console.log("==> selecting success")
                res.send(data);

            });
    }
})

// select example
app.get('/selectData', auth,function(req,res){
    oracledb.getConnection(
        {
            user          : dbConfig.user,
            password      : dbConfig.password,
            connectString : dbConfig.connectString
        },
        function(err, connection)
        {
            if (err) {
                console.error(err.message);
                return;
            }
            console.log("==> oracle select example is running...")
            var sql = "SELECT * FROM DEF_JOB WHERE ROWNUM <= 10";
            // 상위 10개 레코드만 조회
            connection.execute(sql,{},{outFormat:oracledb.OBJECT},
                    function(err, result){
                    if (err) {
                        console.error(err.message);
                        doRelease(connection);
                        return;
                    }
                    //console.log(result.metaData); // 테이블 스키마
                    console.log(result.rows); // 데이터
                    doRelease(connection, result.rows);
                });
        });

    function doRelease(connection, data)
    {
        connection.release(
            function(err) {
                if (err) {
                    console.error(err.message);
                }
                console.log("==> selecting success")
                res.send(data);

            });
    }
})




//-------------------------------jwt 로그인------------------------------------
app.post('/loginEZ', function(req,res){
    oracledb.getConnection(
        {
            user          : dbConfig.user,
            password      : dbConfig.password,
            connectString : dbConfig.connectString
        },
        function(err, connection)
        {
            if (err) {
                console.error(err.message);
                return;
            }
            var uid = req.body.uid;
            var upw = req.body.password;
            console.log("==> oracle select example is running...")
            var sql = "SELECT USER_PW FROM EZ_LOGIN WHERE USER_ID IN (:v1)";
            var binds = [uid];
            connection.execute(sql,binds,{outFormat:oracledb.OBJECT},
                    function(err, result){
                    if (err) {
                        console.error(err.message);
                        doRelease(connection);
                        return;
                    }
                    //console.log(result.metaData); // 테이블 스키마
                    console.log(result.rows[0].USER_PW); // 데이터
                    var dbpw = result.rows[0].USER_PW;
                    if(dbpw == upw){
                        // login 성공
                        var tokenKey = "P~airJu@i!!!ce$%#IsD*in&^nerBot"
                        jwt.sign({
                            UID : uid
                        },
                        tokenKey,
                        {
                            expiresIn : '30m',
                            issuer : 'daysiee',
                            subject : 'user.login.info'
                        },

                        function(err, token){
                            console.log('로그인 성공', token)
                            var data = { "token" : token}
                            res.json(data) // jwt 리턴
                        })
                    }
                    doRelease(connection, result.rows);
                });
        });
        function doRelease(connection, data)
        {
            connection.release(
                function(err) {
                    if (err) {
                        console.error(err.message);
                    }
                    console.log("==> selecting success")
                    //res.send(data);
                });
        }
})




//------------------------------------api 추가---------------------------------------

//다중 필터로 배치내역 조회
app.post('/getHistroy_byFilter', function(req,res){
    oracledb.getConnection(
        {
            user          : dbConfig.user,
            password      : dbConfig.password,
            connectString : dbConfig.connectString
        },
        function(err, connection)
        {
            if (err) {
                console.error(err.message);
                return;
            }
            console.log("==> oracle select example is running...")

            // 필터 시작
            var deptNm = "%%";
            if(req.body.DEPT_NM != null){
                deptNm = '%'+req.body.DEPT_NM+'%';
            }
            console.log(deptNm);
            var userNm = "%%";
            if(req.body.USER_NM != null){
                userNm = '%'+req.body.USER_NM+'%';
            }
            var jobNm = "%%";
            if(req.body.JOB_NAME != null){
                jobNm = '%'+req.body.JOB_NAME+'%';
            }
            var status = "%%";
            if(req.body.STATUS != null){
                status = '%'+req.body.STATUS+'%';
            }
            var application = "%%";
            if(req.body.APPLICATION != null){
                application = '%'+req.body.APPLICATION+'%';
            }
            var groupNm = "%%";
            if(req.body.GROUP_NAME != null){
                groupNm = '%'+req.body.GROUP_NAME+'%';
            }
            var startOd = 200812;
            if(req.body.START_DATE != ""){
                startOd = parseInt(req.body.START_DATE);
            }
            var endOd = 200814;
            if(req.body.END_DATE != ""){
                endOd = parseInt(req.body.END_DATE);
            }
            var sql = "WITH NAMEFILTER_T AS (SELECT EZ_JOB_MAPPER.JOB_NAME, DEPT_NM, USER_NM FROM EZ_JOB_MAPPER,(SELECT EZ_USER.USER_CD, EZ_USER.USER_NM, EZ_DEPT.DEPT_NM FROM EZ_USER, EZ_DEPT WHERE EZ_USER.DEPT_CD = EZ_DEPT.DEPT_CD(+)) WHERE EZ_JOB_MAPPER.USER_CD_1 = USER_CD(+) AND DEPT_NM LIKE (:v1) AND USER_NM LIKE (:v2) AND JOB_NAME LIKE (:v3)), JOBFILTER_T AS (SELECT JOB_NAME, STATUS, ORDER_TIME,ORDER_ID FROM EZ_HISTORY WHERE STATUS LIKE (:v4) AND APPLICATION LIKE (:v5) AND GROUP_NAME LIKE (:v6) AND ODATE BETWEEN (:v7) AND (:v8)) SELECT JOB_NAME, DEPT_NM, USER_NM, STATUS, ORDER_TIME,ORDER_ID FROM (SELECT ROW_NUMBER() over (ORDER BY DEPT_NM) rnum, JOBFILTER_T.JOB_NAME, DEPT_NM, USER_NM, STATUS, ORDER_TIME,ORDER_ID FROM NAMEFILTER_T, JOBFILTER_T WHERE JOBFILTER_T.JOB_NAME = NAMEFILTER_T.JOB_NAME)"

            var binds = {
        v1: { val: deptNm, dir: oracledb.BIND_IN, type: oracledb.STRING },
        v2: { val: userNm, dir: oracledb.BIND_IN, type: oracledb.STRING },
        v3: { val: jobNm, dir: oracledb.BIND_IN, type: oracledb.STRING },
        v4: { val: status, dir: oracledb.BIND_IN, type: oracledb.STRING },
        v5: { val: application, dir: oracledb.BIND_IN, type: oracledb.STRING },
        v6: { val: groupNm, dir: oracledb.BIND_IN, type: oracledb.STRING },
        v7: { val: startOd},
        v8: { val: endOd}
        };

       console.log(binds);

            connection.execute(sql, binds, {outFormat:oracledb.OBJECT},
                    function(err, result){
                    if (err) {
                        console.error(err.message);
                        doRelease(connection);
                        return;
                    }
                    var page_num = req.body.PAGE_NUM;
                    console.log("PAGE_NUM: "+page_num);
                    var totalCount = result.rows.length; // 총 레코드 수
                    //console.log(totalCount);
                    var listCount = 10; // 한 번에 보여줄 레코드 수
                    var totalPage = parseInt(totalCount / listCount);
                    //console.log(totalPage);
                    if(totalCount % listCount > 0){
                        totalPage++;
                    }
                    if(totalPage < page_num){
                        page_num = totalPage;
                    }
                    var start_num  = page_num * 10;
                    var end_num = start_num + (listCount-1);
                    console.log("Start Record Num is "+start_num);
                    console.log("End Record Num is "+end_num);
                    var sql2 = sql + "WHERE rnum BETWEEN (:v9) AND (:v10)";
                    var binds2 =  {
                        v1: { val: deptNm, dir: oracledb.BIND_IN, type: oracledb.STRING },
                        v2: { val: userNm, dir: oracledb.BIND_IN, type: oracledb.STRING },
                        v3: { val: jobNm, dir: oracledb.BIND_IN, type: oracledb.STRING },
                        v4: { val: status, dir: oracledb.BIND_IN, type: oracledb.STRING },
                        v5: { val: application, dir: oracledb.BIND_IN, type: oracledb.STRING },
                        v6: { val: groupNm, dir: oracledb.BIND_IN, type: oracledb.STRING },
                        v7: { val: startOd},
                        v8: { val: endOd},
                        v9: { val: start_num},
                        v10: { val: end_num}
                        };

                        connection.execute(sql2, binds2, {outFormat:oracledb.OBJECT},
                            function(err, result){
                                if (err) {
                                    console.error(err.message);
                                    doRelease(connection);
                                    return;
                                }
                                console.log("페이징 시작");
                                console.log(result.rows); // 데이터
                                 
cpm
                                console.log(result.rows 
                                doRelease(connection, result.rows);
                            });
                });
        });
    function doRelease(connection, data)
    {
        connection.release(
            function(err) {
                if (err) {
                    console.error(err.message);
                }
                console.log("==> selecting success")
                res.send(data);

            });
    }
})


//업무명으로 비상연락망 조회
app.post('/getPersonInfo_byJob', function(req,res){
    oracledb.getConnection(
        {
            user          : dbConfig.user,
            password      : dbConfig.password,
            connectString : dbConfig.connectString
        },
        function(err, connection)
        {
            if (err) {
                console.error(err.message);
                return;
            }
            console.log("==> oracle select example is running...")
            var job_str="%%"; // 검색 대상 문자열 (업무명)
            if(req.body.USER_JOB != null){
                job_str = '%'+req.body.USER_JOB+'%'; 
            } 
            var sql = "SELECT DEPT_NM, USER_NM, USER_HP, USER_JOB FROM (SELECT ROW_NUMBER() over (ORDER BY DEPT_NM) rnum, DEPT_NM, USER_NM, USER_HP, USER_JOB FROM (SELECT DEPT_NM, USER_NM, USER_HP, USER_JOB FROM EZ_USER, EZ_DEPT WHERE EZ_USER.DEPT_CD = EZ_DEPT.DEPT_CD(+) AND USER_JOB LIKE (:v1)) ORDER BY DEPT_NM)";
            connection.execute(sql,[job_str],{outFormat:oracledb.OBJECT},
                    function(err, result){
                    if (err) {
                        console.error(err.message);
                        doRelease(connection);
                        return;
                    }
                    var page_num = req.body.PAGE_NUM;
                    console.log("PAGE_NUM: "+page_num);
                    var totalCount = result.rows.length; // 총 레코드 수
                    //console.log(totalCount);
                    var listCount = 10; // 한 번에 보여줄 레코드 수
                    var totalPage = parseInt(totalCount / listCount);
                    //console.log(totalPage);
                    if(totalCount % listCount > 0){
                        totalPage++;
                    }
                    if(totalPage < page_num){
                        page_num = totalPage;
                    }
                    var start_num  = page_num * 10;
                    var end_num = start_num + listCount;
                    console.log("Start Record Num is "+start_num);
                    console.log("End Record Num is "+end_num);
                    var sql2 = sql + " WHERE rnum BETWEEN (:v1) AND (:v2)";
                    connection.execute(sql2,[job_str,start_num,end_num],{outFormat:oracledb.OBJECT}, function(err, result){
                        if (err) {
                            console.error(err.message);
                            doRelease(connection);
                            return;
                        }
                        console.log(result.rows); // 데이터
                        doRelease(connection, result.rows);
                    });
                });
        });
    function doRelease(connection, data)
    {
        connection.release(
            function(err) {
                if (err) {
                    console.error(err.message);
                }
                console.log("==> selecting success")
                res.send(data);

            });
    }
})


//담당자명으로 비상연락망 조회
app.post('/getPersonInfo_byName', function(req,res){
    oracledb.getConnection(
        {
            user          : dbConfig.user,
            password      : dbConfig.password,
            connectString : dbConfig.connectString
        },
        function(err, connection)
        {
            if (err) {
                console.error(err.message);
                return;
            }
            console.log("==> oracle select example is running...")
            var name_str="%%"; // 검색 대상 문자열 (담당자명)
            if(req.body.USER_NM != null){
                name_str = '%'+req.body.USER_NM+'%'; 
            } 
            var sql = "SELECT DEPT_NM, USER_NM, USER_HP, USER_JOB FROM (SELECT ROW_NUMBER() over (ORDER BY DEPT_NM) rnum, DEPT_NM, USER_NM, USER_HP, USER_JOB FROM (SELECT DEPT_NM, USER_NM, USER_HP, USER_JOB FROM EZ_USER, EZ_DEPT WHERE EZ_USER.DEPT_CD = EZ_DEPT.DEPT_CD(+) AND USER_NM LIKE(:v1)) ORDER BY DEPT_NM)";
            connection.execute(sql,[name_str],{outFormat:oracledb.OBJECT},
                    function(err, result){
                    if (err) {
                        console.error(err.message);
                        doRelease(connection);
                        return;
                    }
                    var page_num = req.body.PAGE_NUM;
                    console.log("PAGE_NUM: "+page_num);
                    var totalCount = result.rows.length; // 총 레코드 수
                    //console.log(totalCount);
                    var listCount = 10; // 한 번에 보여줄 레코드 수
                    var totalPage = parseInt(totalCount / listCount);
                    //console.log(totalPage);
                    if(totalCount % listCount > 0){
                        totalPage++;
                    }
                    if(totalPage < page_num){
                        page_num = totalPage;
                    }
                    var start_num  = page_num * 10;
                    var end_num = start_num + listCount;
                    console.log("Start Record Num is "+start_num);
                    console.log("End Record Num is "+end_num);
                    var sql2 = sql + " WHERE rnum BETWEEN (:v1) AND (:v2)";
                    connection.execute(sql2,[name_str,start_num,end_num],{outFormat:oracledb.OBJECT}, function(err, result){
                        if (err) {
                            console.error(err.message);
                            doRelease(connection);
                            return;
                        }
                        console.log(result.rows); // 데이터
                        doRelease(connection, result.rows);
                    });
                });
        });
    function doRelease(connection, data)
    {
        connection.release(
            function(err) {
                if (err) {
                    console.error(err.message);
                }
                console.log("==> selecting success")
                res.send(data);

            });
    }
})


app.listen(3000)
